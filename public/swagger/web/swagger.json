{
    "openapi": "3.0.0",
    "info": {
        "title": "Patient Tracker API",
        "version": "1.0"
    },
    "paths": {
        "/auth/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the user",
                "operationId": "auth_logout",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh the token",
                "operationId": "auth_refresh",
                "requestBody": {
                    "description": "Token refresh request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshToken"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResult"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Response: token is expired"
                    }
                }
            }
        },
        "/auth/session": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Updaate session with aixos requests",
                "operationId": "auth_session",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/auth/token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate the user",
                "operationId": "auth_token",
                "requestBody": {
                    "description": "Authenticate",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/authorization/permissions/copy/{permId}": {
            "post": {
                "tags": [
                    "Authorization Permissions"
                ],
                "summary": "Copy a permission",
                "operationId": "authorizationPermissions_copy",
                "requestBody": {
                    "description": "Create a new permission",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PermissionSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/authorization/permissions/create": {
            "post": {
                "tags": [
                    "Authorization Permissions"
                ],
                "summary": "Create a new permission",
                "operationId": "authorizationPermissions_create",
                "requestBody": {
                    "description": "Create a new permission",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PermissionSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/authorization/permissions/delete/{permId}": {
            "delete": {
                "tags": [
                    "Authorization Permissions"
                ],
                "summary": "Delete permission",
                "operationId": "authorizationPermissions_delete",
                "parameters": [
                    {
                        "name": "permId",
                        "in": "path",
                        "description": "Permission uuid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/authorization/permissions/findAllByPaging": {
            "get": {
                "tags": [
                    "Authorization Permissions"
                ],
                "summary": "Find all permissions",
                "operationId": "authorizationPermissions_findAllByPaging",
                "parameters": [
                    {
                        "name": "$filters",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PermissionsFindAllByPaging"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/authorization/permissions/findAll": {
            "get": {
                "tags": [
                    "Authorization Permissions"
                ],
                "summary": "Find all permissions",
                "operationId": "authorizationPermissions_findAll",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PermissionsFindAll"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/authorization/permissions/update/{permId}": {
            "put": {
                "tags": [
                    "Authorization Permissions"
                ],
                "summary": "Update a permission",
                "operationId": "authorizationPermissions_update",
                "requestBody": {
                    "description": "Update a permission",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PermissionSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/authorization/roles/create": {
            "post": {
                "tags": [
                    "Authorization Roles"
                ],
                "summary": "Create a new role",
                "operationId": "authorizationRoles_create",
                "requestBody": {
                    "description": "Create a new role",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/authorization/roles/delete/{permId}": {
            "delete": {
                "tags": [
                    "Authorization Roles"
                ],
                "summary": "Delete role",
                "operationId": "authorizationRoles_delete",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "description": "Role uuid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/authorization/roles/findAllByPaging": {
            "get": {
                "tags": [
                    "Authorization Roles"
                ],
                "summary": "Find all roles by pagination",
                "operationId": "authorizationRoles_findAllByPaging",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_perPage",
                        "in": "query",
                        "description": "Per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_sort",
                        "in": "query",
                        "description": "Order items",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RolesFindAllByPaging"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/authorization/roles/findAll": {
            "get": {
                "tags": [
                    "Authorization Roles"
                ],
                "summary": "Find all roles",
                "operationId": "authorizationRoles_findAll",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonFindAll"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/authorization/roles/findOneById/{roleId}": {
            "get": {
                "tags": [
                    "Authorization Roles"
                ],
                "summary": "Find item data",
                "operationId": "authorizationRoles_findOneById",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RolesFindOneById"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/authorization/roles/update/{roleId}": {
            "put": {
                "tags": [
                    "Authorization Roles"
                ],
                "summary": "Update role",
                "operationId": "authorizationRoles_update",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update role",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/authorization/userRoles/assign": {
            "put": {
                "tags": [
                    "Authorization Roles"
                ],
                "summary": "Assing a role for user",
                "operationId": "authorizationUserRoles_assign",
                "requestBody": {
                    "description": "Assign a new user role",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRoleAssignment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/authorization/userRoles/findAllByPaging/{roleId}": {
            "get": {
                "tags": [
                    "Authorization Roles"
                ],
                "summary": "Find all roles by pagination",
                "operationId": "authorizationUserRoles_findAllByPaging",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "description": "role Id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_perPage",
                        "in": "query",
                        "description": "Per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_sort",
                        "in": "query",
                        "description": "Order items",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRolesFindAllByPaging"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/authorization/userRoles/unassign": {
            "put": {
                "tags": [
                    "Authorization Roles"
                ],
                "summary": "Unassign role",
                "operationId": "authorizationUserRoles_unassign",
                "requestBody": {
                    "description": "Unassign a user role",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRoleAssignment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/intakes/create": {
            "post": {
                "tags": [
                    "Intakes"
                ],
                "summary": "Create a new intake",
                "operationId": "intakes_create",
                "requestBody": {
                    "description": "Create a new intake",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IntakeSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/intakes/delete/{intakeId}": {
            "delete": {
                "tags": [
                    "Intakes"
                ],
                "summary": "Delete intake",
                "operationId": "intakes_delete",
                "parameters": [
                    {
                        "name": "intakeId",
                        "in": "path",
                        "description": "Intake uuid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/intakes/femaleAdults/findAllByPaging": {
            "get": {
                "tags": [
                    "Intakes"
                ],
                "summary": "Find all intakes by pagination",
                "operationId": "intakesFemaleAdults_findAllByPaging",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_perPage",
                        "in": "query",
                        "description": "Per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_sort",
                        "in": "query",
                        "description": "Order items",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntakesFindAllByPaging"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/intakes/findAllById/{patientId}": {
            "get": {
                "tags": [
                    "Intakes"
                ],
                "summary": "Find all intakes by id",
                "operationId": "intakes_findAllById",
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntakesFindAllById"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/intakes/findAllByPaging": {
            "get": {
                "tags": [
                    "Intakes"
                ],
                "summary": "Find all intakes by pagination",
                "operationId": "intakes_findAllByPaging",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_perPage",
                        "in": "query",
                        "description": "Per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_sort",
                        "in": "query",
                        "description": "Order items",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntakesFindAllByPaging"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/intakes/findAll": {
            "get": {
                "tags": [
                    "Intakes"
                ],
                "summary": "Find all intakes",
                "operationId": "intakes_findAll",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonFindAll"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/intakes/findOneById/{intakeId}": {
            "get": {
                "tags": [
                    "Intakes"
                ],
                "summary": "Find one intake find one by id",
                "operationId": "intakes_findOneById",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntakesFindOneById"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/intakes/maleInfants/findAllByPaging": {
            "get": {
                "tags": [
                    "Intakes"
                ],
                "summary": "Find all intakes by pagination",
                "operationId": "intakesMaleInfants_findAllByPaging",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_perPage",
                        "in": "query",
                        "description": "Per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_sort",
                        "in": "query",
                        "description": "Order items",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntakesFindAllByPaging"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/intakes/update/{intakeId}": {
            "put": {
                "tags": [
                    "Intakes"
                ],
                "summary": "Intake",
                "operationId": "intakes_update",
                "parameters": [
                    {
                        "name": "intakeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IntakeSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/medicines/create": {
            "post": {
                "tags": [
                    "Medicines"
                ],
                "summary": "Create a new medicine",
                "operationId": "medicines_create",
                "requestBody": {
                    "description": "Create a new medicine",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MedicineSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/medicines/delete/{medicineId}": {
            "delete": {
                "tags": [
                    "Medicines"
                ],
                "summary": "Delete medicine",
                "operationId": "medicines_delete",
                "parameters": [
                    {
                        "name": "medicineId",
                        "in": "path",
                        "description": "Medicine uuid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/medicines/findAllByPaging": {
            "get": {
                "tags": [
                    "Medicines"
                ],
                "summary": "Find all medicines by pagination",
                "operationId": "medicines_findAllByPaging",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_perPage",
                        "in": "query",
                        "description": "Per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_sort",
                        "in": "query",
                        "description": "Order items",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinesFindAllByPaging"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/medicines/findAll": {
            "get": {
                "tags": [
                    "Medicines"
                ],
                "summary": "Find all medicines",
                "operationId": "medicines_findAll",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonFindAll"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/medicines/findOneById/{medicineId}": {
            "get": {
                "tags": [
                    "Medicines"
                ],
                "summary": "Find one medicine find one by id",
                "operationId": "medicines_findOneById",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicinesFindOneById"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/medicines/update/{medicineId}": {
            "put": {
                "tags": [
                    "Medicines"
                ],
                "summary": "Medicine",
                "operationId": "medicines_update",
                "parameters": [
                    {
                        "name": "medicineId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MedicineSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/modules/create": {
            "post": {
                "tags": [
                    "Modules"
                ],
                "summary": "Create a new module",
                "operationId": "modules_create",
                "requestBody": {
                    "description": "Create a new role",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModuleSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/modules/delete/{permId}": {
            "delete": {
                "tags": [
                    "Modules"
                ],
                "summary": "Delete module",
                "operationId": "modules_delete",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "description": "Module uuid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/modules/findAllByPaging": {
            "get": {
                "tags": [
                    "Modules"
                ],
                "summary": "Find all modules by pagination",
                "operationId": "modules_findAllByPaging",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_perPage",
                        "in": "query",
                        "description": "Per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_sort",
                        "in": "query",
                        "description": "Order items",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModulesFindAllByPaging"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/modules/findAll": {
            "get": {
                "tags": [
                    "Modules"
                ],
                "summary": "Find all modules",
                "operationId": "modules_findAll",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModulesFindAll"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/modules/update/{moduleId}": {
            "put": {
                "tags": [
                    "Modules"
                ],
                "summary": "Update module",
                "operationId": "modules_update",
                "parameters": [
                    {
                        "name": "moduleId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update role",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModuleSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleUpdateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/patients/create": {
            "post": {
                "tags": [
                    "Patients"
                ],
                "summary": "Create a new patient",
                "operationId": "patients_create",
                "requestBody": {
                    "description": "Create a new patient",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatientSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/patients/delete/{patientId}": {
            "delete": {
                "tags": [
                    "Patients"
                ],
                "summary": "Delete patient",
                "operationId": "patients_delete",
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "description": "Patient uuid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/patients/findAllByPaging": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Find all patients by pagination",
                "operationId": "patients_findAllByPaging",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_perPage",
                        "in": "query",
                        "description": "Per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_sort",
                        "in": "query",
                        "description": "Order items",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatientsFindAllByPaging"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/patients/findAll": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Find all patients",
                "operationId": "patients_findAll",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonFindAll"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/patients/findOneById/{patientId}": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Find one patient find one by id",
                "operationId": "patients_findOneById",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatientsFindOneById"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/patients/update/{patientId}": {
            "put": {
                "tags": [
                    "Patients"
                ],
                "summary": "Patient",
                "operationId": "patients_update",
                "parameters": [
                    {
                        "name": "patientId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatientSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/users/create": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "users_create",
                "requestBody": {
                    "description": "Create a new user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/users/delete/{userId}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "operationId": "users_delete",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "user uuid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/users/findAllByPaging": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Find all users by pagination",
                "operationId": "users_findAllByPaging",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_perPage",
                        "in": "query",
                        "description": "Per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_sort",
                        "in": "query",
                        "description": "Order items",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UsersFindAllByPaging"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/users/findAll": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Find all users for autocompleters",
                "operationId": "users_findAll",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonFindAll"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/users/findOneById": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Find one user by id",
                "operationId": "users_findOneById",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UsersFindOneById"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found"
                    }
                }
            }
        },
        "/users/myAccount/findMe": {
            "get": {
                "tags": [
                    "Users My Account"
                ],
                "summary": "Find my account data",
                "operationId": "usersMyAccount_findOneById",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyAccountFindMe"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/account/update": {
            "put": {
                "tags": [
                    "Users My Account"
                ],
                "summary": "Update account",
                "operationId": "usersMyAccount_update",
                "requestBody": {
                    "description": "Update Cost",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MyAccountSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/users/myAccount/updatePassword": {
            "put": {
                "tags": [
                    "Users My Account"
                ],
                "summary": "Update password",
                "operationId": "usersMyAccount_updatePassword",
                "requestBody": {
                    "description": "Update Password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MyAccountUpdatePassword"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/users/update/{userId}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "operationId": "users_update",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        },
        "/users/updatePassword/{userId}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user passwors",
                "operationId": "users_updatePassword",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserPasswordSave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request, returns to validation errors"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AuthRequest": {
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AuthResult": {
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserObject"
                    },
                    "avatar": {
                        "$ref": "#/components/schemas/AvatarObject"
                    },
                    "expiresAt": {
                        "description": "Expiration date of token",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "RefreshToken": {
                "properties": {
                    "token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserObject": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PermissionSave": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "module": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "action": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "route": {
                        "type": "string"
                    },
                    "method": {
                        "$ref": "#/components/schemas/ObjectId"
                    }
                },
                "type": "object"
            },
            "PermissionsFindAll": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "module": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "route": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                },
                                "action": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "PermissionsFindAllByPaging": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PermissionsFindAllByPagingObject"
                        }
                    },
                    "page": {
                        "type": "integer"
                    },
                    "perPage": {
                        "type": "integer"
                    },
                    "totalPages": {
                        "type": "integer"
                    },
                    "totalItems": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PermissionsFindAllByPagingObject": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "module": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "route": {
                        "type": "string"
                    },
                    "method": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RoleSave": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "key": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "level": {
                        "type": "number"
                    },
                    "rolePermissions": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "permId": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "RolesFindAllByPaging": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RolesFindAllByPagingObject"
                        }
                    },
                    "page": {
                        "type": "integer"
                    },
                    "perPage": {
                        "type": "integer"
                    },
                    "totalPages": {
                        "type": "integer"
                    },
                    "totalItems": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "RolesFindAllByPagingObject": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "key": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "level": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RolesFindOneById": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/RolesFindOneByIdObject"
                    }
                },
                "type": "object"
            },
            "RolesFindOneByIdObject": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "level": {
                        "type": "string"
                    },
                    "rolePermissions": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                },
                                "route": {
                                    "type": "string"
                                },
                                "action": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "roleUsers": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "firstname": {
                                    "type": "string"
                                },
                                "lastname": {
                                    "type": "string"
                                },
                                "isActive": {
                                    "type": "number"
                                },
                                "createdAt": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "UserRoleAssignment": {
                "properties": {
                    "userId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "roleId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "UserRolesFindAllByPaging": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserRolesFindAllByPagingObject"
                        }
                    },
                    "page": {
                        "type": "integer"
                    },
                    "perPage": {
                        "type": "integer"
                    },
                    "totalPages": {
                        "type": "integer"
                    },
                    "totalItems": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserRolesFindAllByPagingObject": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AvatarObject": {
                "properties": {
                    "image": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CommonFindAll": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "ObjectId": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "IntakeSave": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "patientId": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "medicineId": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "intakeTime": {
                        "$ref": "#/components/schemas/ObjectId"
                    }
                },
                "type": "object"
            },
            "IntakesFindAll": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "IntakesFindAllById": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IntakesFindAllByIdObject"
                        }
                    },
                    "page": {
                        "type": "integer"
                    },
                    "perPage": {
                        "type": "integer"
                    },
                    "totalPages": {
                        "type": "integer"
                    },
                    "totalItems": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "IntakesFindAllByIdObject": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "patientId": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "medicineId": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "intakeTime": {
                        "$ref": "#/components/schemas/ObjectId"
                    }
                },
                "type": "object"
            },
            "IntakesFindAllByPaging": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IntakesFindAllByPagingObject"
                        }
                    },
                    "page": {
                        "type": "integer"
                    },
                    "perPage": {
                        "type": "integer"
                    },
                    "totalPages": {
                        "type": "integer"
                    },
                    "totalItems": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "IntakesFindAllByPagingObject": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "patientId": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "medicineId": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "gender": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "ageGroup": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "intakeTime": {
                        "$ref": "#/components/schemas/ObjectId"
                    }
                },
                "type": "object"
            },
            "IntakesFindOneById": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/IntakesFindOneByIdObject"
                    }
                },
                "type": "object"
            },
            "IntakesFindOneByIdObject": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "patientId": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "medicineId": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "intakeTime": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MedicineObject": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "frequency": {
                        "type": "string"
                    },
                    "canBeUsedForInfants": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "MedicineSave": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "frequency": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "canBeUsedForInfants": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "MedicinesFindAll": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "MedicinesFindAllByPaging": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MedicinesFindAllByPagingObject"
                        }
                    },
                    "page": {
                        "type": "integer"
                    },
                    "perPage": {
                        "type": "integer"
                    },
                    "totalPages": {
                        "type": "integer"
                    },
                    "totalItems": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "MedicinesFindAllByPagingObject": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "frequency": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "canBeUsedForInfants": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "MedicinesFindOneById": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/MedicinesFindOneByIdObject"
                    }
                },
                "type": "object"
            },
            "MedicinesFindOneByIdObject": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "frequency": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "canBeUsedForInfants": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ModuleSave": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ModuleUpdateResponse": {
                "properties": {
                    "oldRecord": {
                        "$ref": "#/components/schemas/ModuleUpdateResponseObject"
                    }
                },
                "type": "object"
            },
            "ModuleUpdateResponseObject": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ModulesFindAll": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "version": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "ModulesFindAllByPaging": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModulesFindAllByPagingObject"
                        }
                    },
                    "page": {
                        "type": "integer"
                    },
                    "perPage": {
                        "type": "integer"
                    },
                    "totalPages": {
                        "type": "integer"
                    },
                    "totalItems": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ModulesFindAllByPagingObject": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PatientSave": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "userId": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "gender": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "ageGroup": {
                        "$ref": "#/components/schemas/ObjectId"
                    }
                },
                "type": "object"
            },
            "PatientsFindAll": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "userId": {
                                    "type": "string"
                                },
                                "gender": {
                                    "type": "string"
                                },
                                "ageGroup": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "PatientsFindAllByPaging": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatientsFindAllByPagingObject"
                        }
                    },
                    "page": {
                        "type": "integer"
                    },
                    "perPage": {
                        "type": "integer"
                    },
                    "totalPages": {
                        "type": "integer"
                    },
                    "totalItems": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PatientsFindAllByPagingObject": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "userId": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "gender": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "ageGroup": {
                        "$ref": "#/components/schemas/ObjectId"
                    }
                },
                "type": "object"
            },
            "PatientsFindOneById": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/PatientsFindOneByIdObject"
                    }
                },
                "type": "object"
            },
            "PatientsFindOneByIdObject": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "userId": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "patientId": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "gender": {
                        "$ref": "#/components/schemas/ObjectId"
                    },
                    "ageGroup": {
                        "$ref": "#/components/schemas/ObjectId"
                    }
                },
                "type": "object"
            },
            "MyAccountFindMe": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/MyAccountFindMeObject"
                    }
                },
                "type": "object"
            },
            "MyAccountFindMeObject": {
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "avatar": {
                        "$ref": "#/components/schemas/AvatarObject"
                    }
                },
                "type": "object"
            },
            "MyAccountSave": {
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "avatar": {
                        "$ref": "#/components/schemas/AvatarObject"
                    }
                },
                "type": "object"
            },
            "MyAccountUpdatePassword": {
                "properties": {
                    "oldPassword": {
                        "type": "string"
                    },
                    "newPassword": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserPasswordSave": {
                "properties": {
                    "password": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserSave": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "avatar": {
                        "$ref": "#/components/schemas/AvatarObject"
                    },
                    "isActive": {
                        "type": "integer"
                    },
                    "isEmailActivated": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UsersFindAllByPaging": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UsersFindAllByPagingObject"
                        }
                    },
                    "page": {
                        "type": "integer"
                    },
                    "perPage": {
                        "type": "integer"
                    },
                    "totalPages": {
                        "type": "integer"
                    },
                    "totalItems": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UsersFindAllByPagingObject": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "integer"
                    },
                    "isEmailActivated": {
                        "type": "integer"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "userRoles": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "UsersFindOneById": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/UsersFindOneByIdObject"
                    }
                },
                "type": "object"
            },
            "UsersFindOneByIdObject": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "integer"
                    },
                    "isEmailActivated": {
                        "type": "integer"
                    },
                    "avatar": {
                        "$ref": "#/components/schemas/AvatarObject"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Authorization Permissions",
            "description": "Authorization Permissions"
        },
        {
            "name": "Authorization Roles",
            "description": "Authorization Roles"
        },
        {
            "name": "Intakes",
            "description": "Intakes"
        },
        {
            "name": "Medicines",
            "description": "Medicines"
        },
        {
            "name": "Modules",
            "description": "Modules"
        },
        {
            "name": "Patients",
            "description": "Patients"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Users My Account",
            "description": "Users My Account"
        }
    ]
}